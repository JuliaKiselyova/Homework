{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\Projects\\\\Front-end Pro\\\\28-lesson-React-Crud\\\\Homework\\\\react-contact-list\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  _s();\n  let {\n    addContact\n  } = _ref;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      firstName,\n      lastName,\n      phone,\n      id: Math.random()\n    };\n    addContact(newContact);\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List CRUD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"xSwl5PXUMGtc/hPKRc4m8JmuSfw=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Header","_ref","_s","addContact","firstName","setFirstName","lastName","setLastName","phone","setPhone","handleSubmit","e","preventDefault","newContact","id","Math","random","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/1/Desktop/Projects/Front-end Pro/28-lesson-React-Crud/Homework/react-contact-list/src/components/Header.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Header = ({ addContact }) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newContact = { firstName, lastName, phone, id: Math.random() };\r\n        addContact(newContact);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setPhone('');\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <h1>Todo List CRUD</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n                <button type=\"submit\">Add Contact</button>\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,UAAU,GAAG;MAAET,SAAS;MAAEE,QAAQ;MAAEE,KAAK;MAAEM,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC;IACpEb,UAAU,CAACU,UAAU,CAAC;IACtBR,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;IACfE,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIV,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAMuB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBACzBlB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,YAAY;QAACC,KAAK,EAAErB,SAAU;QAACsB,QAAQ,EAAGf,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACgB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/GtB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,WAAW;QAACC,KAAK,EAAEnB,QAAS;QAACoB,QAAQ,EAAGf,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5GtB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,KAAK,EAAEjB,KAAM;QAACkB,QAAQ,EAAGf,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAACnB,EAAA,CAzBIF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}